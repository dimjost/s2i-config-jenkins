<?xml version='1.0' encoding='UTF-8'?>
<scriptApproval plugin="script-security@1.43">
  <approvedScriptHashes/>
  <approvedSignatures>
    <string>staticMethod org.codehaus.groovy.runtime.DefaultGroovyMethods drop java.lang.CharSequence int</string>
    <string>staticMethod org.codehaus.groovy.runtime.DefaultGroovyMethods reverse java.lang.String</string>
    <string>staticMethod org.codehaus.groovy.runtime.DefaultGroovyMethods minus java.lang.String</string>
    <string>staticMethod org.codehaus.groovy.runtime.EncodingGroovyMethods decodeBase64 java.lang.String</string>
    <string>method hudson.plugins.git.GitSCM getUserRemoteConfigs</string>
    <string>new java.lang.String byte[]</string>
    <string>staticMethod java.lang.System getenv java.lang.String</string>
    <string>staticMethod org.codehaus.groovy.runtime.DefaultGroovyMethods execute java.lang.String</string>
    <string>staticMethod org.codehaus.groovy.runtime.ProcessGroovyMethods getText java.lang.Process</string>
    <string>method com.cloudbees.plugins.credentials.CredentialsStore addCredentials com.cloudbees.plugins.credentials.domains.Domain com.cloudbees.plugins.credentials.Credentials</string>
    <string>method com.cloudbees.plugins.credentials.SystemCredentialsProvider getStore</string>
    <string>method hudson.model.Saveable save</string>
    <string>method hudson.slaves.EnvironmentVariablesNodeProperty getEnvVars</string>
    <string>method hudson.util.PersistedList getAll java.lang.Class</string>
    <string>method jenkins.model.Jenkins getExtensionList java.lang.String</string>
    <string>method jenkins.model.Jenkins getGlobalNodeProperties</string>
    <string>new com.cloudbees.jenkins.plugins.sshcredentials.impl.BasicSSHUserPrivateKey com.cloudbees.plugins.credentials.CredentialsScope java.lang.String java.lang.String com.cloudbees.jenkins.plugins.sshcredentials.impl.BasicSSHUserPrivateKey$PrivateKeySource java.lang.String java.lang.String</string>
    <string>new com.cloudbees.jenkins.plugins.sshcredentials.impl.BasicSSHUserPrivateKey$DirectEntryPrivateKeySource java.lang.String</string>
    <string>new java.io.File java.lang.String</string>
    <string>new java.lang.StringBuilder</string>
    <string>staticField com.cloudbees.plugins.credentials.CredentialsScope GLOBAL</string>
    <string>staticMethod com.cloudbees.plugins.credentials.domains.Domain global</string>
    <string>staticMethod jenkins.model.Jenkins getInstance</string>
    <string>staticMethod org.codehaus.groovy.runtime.DefaultGroovyMethods execute java.lang.String</string>
    <string>staticMethod org.codehaus.groovy.runtime.DefaultGroovyMethods getText java.io.File java.lang.String</string>
    <string>staticMethod org.codehaus.groovy.runtime.ProcessGroovyMethods consumeProcessOutput java.lang.Process java.lang.Appendable java.lang.Appendable</string>
    <string>staticMethod org.codehaus.groovy.runtime.ProcessGroovyMethods waitForOrKill java.lang.Process long</string>
    <string>staticMethod com.cloudbees.plugins.credentials.CredentialsMatchers withUsername java.lang.String</string>
    <string>staticField hudson.security.ACL SYSTEM</string>
    <string>staticMethod com.cloudbees.plugins.credentials.CredentialsProvider lookupCredentials java.lang.Class hudson.model.ItemGroup org.acegisecurity.Authentication</string>
    <string>staticMethod com.cloudbees.plugins.credentials.CredentialsMatchers filter java.util.List com.cloudbees.plugins.credentials.CredentialsMatcher</string>
    <string>method com.cloudbees.plugins.credentials.CredentialsStore removeCredentials com.cloudbees.plugins.credentials.domains.Domain com.cloudbees.plugins.credentials.Credentials</string>
    <string>new hudson.slaves.EnvironmentVariablesNodeProperty hudson.slaves.EnvironmentVariablesNodeProperty$Entry[]</string>
    <string>staticMethod java.lang.System getenv</string>
    <string>method jenkins.model.Jenkins getDescriptor java.lang.String</string>
    <string>method hudson.tasks.Maven$DescriptorImpl getInstallations</string>
    <string>new hudson.tasks.Maven$MavenInstaller java.lang.String</string>
    <string>new hudson.tools.InstallSourceProperty java.util.List</string>
    <string>new hudson.tasks.Maven$MavenInstallation java.lang.String java.lang.String java.util.List</string>
    <string>method hudson.tasks.Maven$DescriptorImpl setInstallations hudson.tasks.Maven$MavenInstallation[]</string>
    <string>new hudson.security.ProjectMatrixAuthorizationStrategy</string>
    <string>method jenkins.model.Jenkins setAuthorizationStrategy hudson.security.AuthorizationStrategy</string>
    <string>method hudson.tools.ToolDescriptor getInstallations</string>
    <string>new hudson.plugins.groovy.GroovyInstaller java.lang.String</string>
    <string>new hudson.plugins.groovy.GroovyInstallation java.lang.String java.lang.String java.util.List</string>
    <string>method hudson.tools.ToolDescriptor setInstallations hudson.tools.ToolInstallation[]</string>
    <string>new hudson.security.HudsonPrivateSecurityRealm boolean boolean hudson.security.captcha.CaptchaSupport</string>
    <string>method jenkins.model.Jenkins setSecurityRealm hudson.security.SecurityRealm</string>
    <string>method jenkins.model.Jenkins getSecurityRealm</string>
    <string>method hudson.security.HudsonPrivateSecurityRealm createAccount java.lang.String java.lang.String</string>
    <string>new hudson.security.ProjectMatrixAuthorizationStrategy</string>
    <string>method jenkins.model.Jenkins setAuthorizationStrategy hudson.security.AuthorizationStrategy</string>
    <script>method hudson.model.ItemGroup getAllItems java.lang.Class</script>
    <script>method com.cloudbees.hudson.plugins.folder.computed.ComputedFolder getComputation</script>
    <script>method java.lang.Runnable run</script>
    <script>method jenkins.branch.MultiBranchProject getSources</script>
    <script>method jenkins.branch.BranchSource setBuildStrategies java.util.List</script>
    <script>new java.util.HashMap</script>
    <script>staticMethod org.codehaus.groovy.runtime.DefaultGroovyMethods contains java.lang.Object[] java.lang.Object</script>
  </approvedSignatures>
  <aclApprovedSignatures/>
  <approvedClasspathEntries/>
  <pendingScripts/>
  <pendingSignatures/>
  <pendingClasspathEntries/>
</scriptApproval>
